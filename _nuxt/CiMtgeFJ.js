import{V as p}from"./C31PI1Pn.js";import{c as f,o as h,r as S,u,i as g,w as a,a as e,Z as C,x as k,cS as M,V as N,f as l,d as s}from"./hT7Su8Cx.js";import{_ as I}from"./FHpZP8EQ.js";import{a as m,V as A}from"./DZfHqwQX.js";import{a as T}from"./CL3N1rsC.js";import{a as G}from"./mQjAWBfy.js";import{a as F}from"./DKzi7AMd.js";import{a as W}from"./DxEgDMcP.js";import{a as U}from"./v8JG2TSt.js";import{a as $}from"./CeoA0Ejg.js";import{a as H}from"./DkxIQet7.js";import{a as L}from"./B0pMlycO.js";import{a as R}from"./BQckpKWy.js";import{V as B}from"./BlfYvl15.js";import"./C_ZbR3iT.js";import"./BnIF_l7j.js";/* empty css        */import"./CgEEchUP.js";import"./CnxjLbqS.js";import"./CIqykHFT.js";import"./DY7PVvcf.js";import"./D52AtpU2.js";import"./C-GTDzx5.js";import"./Djdy6wRW.js";import"./BK87x4uL.js";import"./DaxCsF1Q.js";import"./C0wOwt5y.js";import"./BTStFRXh.js";import"./C_zKeZKp.js";import"./CN-zLIvT.js";import"./SQLNAhns.js";import"./Cu8cl2vz.js";import"./5SN1P5zR.js";import"./DjybWCsk.js";import"./BWcu_LkA.js";import"./DgdoBwi5.js";import"./B7gN4bOp.js";/* empty css        */import"./DxpUPdf-.js";import"./BHIiXw9g.js";const O={__name:"DemoAutocompleteBasic",setup(v){const t=["California","Colorado","Florida","Georgia","Texas","Wyoming"];return(n,c)=>(h(),f(p,{label:"States",items:t,placeholder:"Select State"}))}},P={__name:"DemoAutocompleteDensity",setup(v){const t=S("Florida"),n=["California","Colorado","Florida","Georgia","Texas","Wyoming"];return(c,o)=>(h(),f(p,{modelValue:u(t),"onUpdate:modelValue":o[0]||(o[0]=i=>g(t)?t.value=i:null),label:"States",density:"compact",placeholder:"Select State",items:n},null,8,["modelValue"]))}},z={__name:"DemoAutocompleteVariant",setup(v){const t=["California","Colorado","Florida","Georgia","Texas","Wyoming"];return(n,c)=>(h(),f(A,null,{default:a(()=>[e(m,{cols:"12",md:"6"},{default:a(()=>[e(p,{variant:"solo",label:"solo",items:t,placeholder:"Select State"})]),_:1}),e(m,{cols:"12",md:"6"},{default:a(()=>[e(p,{variant:"outlined",label:"outlined",placeholder:"Select State",items:t})]),_:1}),e(m,{cols:"12",md:"6"},{default:a(()=>[e(p,{variant:"underlined",label:"underlined",placeholder:"Select State",items:t})]),_:1}),e(m,{cols:"12",md:"6"},{default:a(()=>[e(p,{variant:"filled",label:"filled",placeholder:"Select State",items:t})]),_:1}),e(m,{cols:"12",md:"6"},{default:a(()=>[e(p,{variant:"plain",label:"plain",placeholder:"Select State",items:t})]),_:1})]),_:1}))}},Y={__name:"DemoAutocompleteMultiple",setup(v){const t=["California","Colorado","Florida","Georgia","Texas","Wyoming"];return(n,c)=>(h(),f(p,{label:"States",items:t,placeholder:"Select State",multiple:""}))}},J={__name:"DemoAutocompleteClearable",setup(v){const t=["California","Colorado","Florida","Georgia","Texas","Wyoming"];return(n,c)=>(h(),f(p,{label:"States",items:t,multiple:"",placeholder:"Select State",clearable:""}))}},K={__name:"DemoAutocompleteChips",setup(v){const t=["California","Colorado","Florida","Georgia","Texas","Wyoming"];return(n,c)=>(h(),f(p,{label:"States",items:t,placeholder:"Select State",chips:"",multiple:""}))}},E={__name:"DemoAutocompleteCustomFilter",setup(v){const t=[{name:"Florida",abbr:"FL",id:1},{name:"Georgia",abbr:"GA",id:2},{name:"Nebraska",abbr:"NE",id:3},{name:"California",abbr:"CA",id:4},{name:"New York",abbr:"NY",id:5}];function n(c,o,i){const r=i.raw.name.toLowerCase(),_=i.raw.abbr.toLowerCase(),d=o.toLowerCase();return r.includes(d)||_.includes(d)}return(c,o)=>(h(),f(p,{label:"States",items:t,"custom-filter":n,"item-title":"name","item-value":"abbr",placeholder:"Select State"}))}},j={__name:"DemoAutocompleteSlots",setup(v){const t=S(["Sandra Adams","Britta Holt"]),n=[{name:"Sandra Adams",group:"Group 1",avatar:T},{name:"Ali Connors",group:"Group 1",avatar:G},{name:"Trevor Hansen",group:"Group 1",avatar:F},{name:"Tucker Smith",group:"Group 1",avatar:W},{name:"Britta Holt",group:"Group 2",avatar:U},{name:"Jane Smith ",group:"Group 2",avatar:$},{name:"John Smith",group:"Group 2",avatar:H},{name:"Sandra Williams",group:"Group 2",avatar:L}];return(c,o)=>(h(),f(p,{modelValue:u(t),"onUpdate:modelValue":o[0]||(o[0]=i=>g(t)?t.value=i:null),chips:"","closable-chips":"",multiple:"",items:n,"item-title":"name","item-value":"name",placeholder:"Select User",label:"Select"},{chip:a(({props:i,item:r})=>[e(B,C(i,{"prepend-avatar":r.raw.avatar,text:r.raw.name}),null,16,["prepend-avatar","text"])]),item:a(({props:i,item:r})=>{var _,d,b;return[e(R,C(i,{"prepend-avatar":(_=r==null?void 0:r.raw)==null?void 0:_.avatar,title:(d=r==null?void 0:r.raw)==null?void 0:d.name,subtitle:(b=r==null?void 0:r.raw)==null?void 0:b.group}),null,16,["prepend-avatar","title","subtitle"])]}),_:1},8,["modelValue"]))}},X={__name:"DemoAutocompleteAsyncItems",setup(v){const t=S(!1),n=S(),c=S(null),o=["Alabama","Alaska","American Samoa","Arizona","Arkansas","California","Colorado","Connecticut","Delaware","District of Columbia","Federated States of Micronesia","Florida","Georgia","Guam","Hawaii","Idaho","Illinois","Indiana","Iowa","Kansas","Kentucky","Louisiana","Maine","Marshall Islands","Maryland","Massachusetts","Michigan","Minnesota","Mississippi","Missouri","Montana","Nebraska","Nevada","New Hampshire","New Jersey","New Mexico","New York","North Carolina","North Dakota","Northern Mariana Islands","Ohio","Oklahoma","Oregon","Palau","Pennsylvania","Puerto Rico","Rhode Island","South Carolina","South Dakota","Tennessee","Texas","Utah","Vermont","Virgin Island","Virginia","Washington","West Virginia","Wisconsin","Wyoming"],i=S(o),r=_=>{t.value=!0,setTimeout(()=>{i.value=o.filter(d=>(d||"").toLowerCase().includes((_||"").toLowerCase())),t.value=!1},500)};return k(n,_=>{_&&_!==c.value&&r(_)}),(_,d)=>(h(),f(p,{modelValue:u(c),"onUpdate:modelValue":d[0]||(d[0]=b=>g(c)?c.value=b:null),search:u(n),"onUpdate:search":d[1]||(d[1]=b=>g(n)?n.value=b:null),loading:u(t),items:u(i),placeholder:"Search for a state",label:"What state are you from?",variant:"underlined","menu-props":{maxHeight:"200px"}},null,8,["modelValue","search","loading","items"]))}},Z={__name:"DemoAutocompleteStateSelector",setup(v){const t=S(!1),n=S(null),c=["Alabama","Alaska","American Samoa","Arizona","Arkansas","California","Colorado","Connecticut","Delaware","District of Columbia","Federated States of Micronesia","Florida","Georgia","Guam","Hawaii","Idaho","Illinois","Indiana","Iowa","Kansas","Kentucky","Louisiana","Maine","Marshall Islands","Maryland","Massachusetts","Michigan","Minnesota","Mississippi","Missouri","Montana","Nebraska","Nevada","New Hampshire","New Jersey","New Mexico","New York","North Carolina","North Dakota","Northern Mariana Islands","Ohio","Oklahoma","Oregon","Palau","Pennsylvania","Puerto Rico","Rhode Island","South Carolina","South Dakota","Tennessee","Texas","Utah","Vermont","Virgin Island","Virginia","Washington","West Virginia","Wisconsin","Wyoming"];return(o,i)=>(h(),f(p,{modelValue:u(n),"onUpdate:modelValue":i[1]||(i[1]=r=>g(n)?n.value=r:null),hint:u(t)?"Click the icon to save":"Click the icon to edit",placeholder:"Select Your State",items:c,readonly:!u(t),label:`State â€” ${u(t)?"Editable":"Readonly"}`,"persistent-hint":"","prepend-icon":"ri-building-line","menu-props":{maxHeight:"200px"}},{append:a(()=>[e(M,{mode:"out-in"},{default:a(()=>[(h(),f(N,{key:`icon-${u(t)}`,color:u(t)?"success":"info",icon:u(t)?"ri-check-line":"ri-edit-circle-line",onClick:i[0]||(i[0]=r=>t.value=!u(t))},null,8,["color","icon"]))]),_:1})]),_:1},8,["modelValue","hint","readonly","label"]))}},q={__name:"DemoAutocompleteValidation",setup(v){const t=["foo","bar","fizz","buzz"],n=S(["foo"]),c=[o=>!!o.length||"Select at least one option."];return(o,i)=>(h(),f(p,{modelValue:u(n),"onUpdate:modelValue":i[0]||(i[0]=r=>g(n)?n.value=r:null),items:t,rules:c,placeholder:"Select Option",multiple:""},null,8,["modelValue"]))}},Q={},ee={},te={},ae={},oe={},le={},ne={},se={},ie={},re={},ce={},me=l("p",null,[s(" The "),l("code",null," v-autocomplete "),s(" component offers simple and flexible type-ahead functionality. This is useful when searching large sets of data or even dynamically fetching information from an API. ")],-1),ue=l("p",null,[s(" You can use "),l("code",null," density "),s(" prop to adjusts vertical spacing within the component. Available options are: "),l("code",null,"default"),s(", "),l("code",null,"comfortable"),s(", and "),l("code",null,"compact"),s(". ")],-1),pe=l("p",null,[s("Use "),l("code",null,"solo"),s(", "),l("code",null,"outlined"),s(", "),l("code",null,"underlined"),s(", "),l("code",null,"filled"),s(" and "),l("code",null,"plain"),s(" options of "),l("code",null,"variant"),s(" prop to change the look of Autocomplete. ")],-1),de=l("p",null,[s("Use "),l("code",null,"multiple"),s(" prop to select multiple. Accepts array for value")],-1),_e=l("p",null,[s("Use "),l("code",null,"clearable"),s(" prop to add input clear functionality.")],-1),fe=l("p",null,[s("Use "),l("code",null," chips "),s(" prop to use chips in select.")],-1),he=l("p",null,[s("The "),l("code",null," custom-filter "),s(" prop can be used to filter each individual item with custom logic.In example we will filter state based on their name and abbreviations ")],-1),ve=l("p",null,"With the power of slots, you can customize the visual output of the select. In this example we add a profile picture for both the chips and list items using their props. ",-1),Se=l("p",null,"Sometimes you need to load data externally based upon a search query. ",-1),be=l("p",null,"Using a combination of v-autocomplete slots and transitions, you can create a stylish toggle able autocomplete field such as below state selector.",-1),ge=l("p",null,[s("Use "),l("code",null,"rules"),s(" prop to validate autocomplete. Accepts a mixed array of types function, boolean and string. Functions pass an input value as an argument and must return either true / false or a string containing an error message.")],-1),it={__name:"autocomplete",setup(v){return(t,n)=>{const c=O,o=I,i=P,r=z,_=Y,d=J,b=K,y=E,V=j,w=X,x=Z,D=q;return h(),f(A,{class:"match-height"},{default:a(()=>[e(m,{cols:"12",md:"6"},{default:a(()=>[e(o,{title:"Basic",code:ee},{default:a(()=>[me,e(c)]),_:1},8,["code"])]),_:1}),e(m,{cols:"12",md:"6"},{default:a(()=>[e(o,{title:"Density",code:le},{default:a(()=>[ue,e(i)]),_:1},8,["code"])]),_:1}),e(m,{cols:"12",md:"12"},{default:a(()=>[e(o,{title:"Variant",code:ce},{default:a(()=>[pe,e(r)]),_:1},8,["code"])]),_:1}),e(m,{cols:"12",md:"6"},{default:a(()=>[e(o,{title:"Multiple",code:ne},{default:a(()=>[de,e(_)]),_:1},8,["code"])]),_:1}),e(m,{cols:"12",md:"6"},{default:a(()=>[e(o,{title:"Clearable",code:ae},{default:a(()=>[_e,e(d)]),_:1},8,["code"])]),_:1}),e(m,{cols:"12",md:"6"},{default:a(()=>[e(o,{title:"Chips",code:te},{default:a(()=>[fe,e(b)]),_:1},8,["code"])]),_:1}),e(m,{cols:"12",md:"6"},{default:a(()=>[e(o,{title:"Custom-Filter",code:oe},{default:a(()=>[he,e(y)]),_:1},8,["code"])]),_:1}),e(m,{cols:"12",md:"6"},{default:a(()=>[e(o,{title:"Slots",code:se},{default:a(()=>[ve,e(V)]),_:1},8,["code"])]),_:1}),e(m,{cols:"12",md:"6"},{default:a(()=>[e(o,{title:"Async items",code:Q},{default:a(()=>[Se,e(w)]),_:1},8,["code"])]),_:1}),e(m,{cols:"12",md:"6"},{default:a(()=>[e(o,{title:"State Selector",code:ie},{default:a(()=>[be,e(x)]),_:1},8,["code"])]),_:1}),e(m,{cols:"12",md:"6"},{default:a(()=>[e(o,{title:"validation",code:re},{default:a(()=>[ge,e(D)]),_:1},8,["code"])]),_:1})]),_:1})}}};export{it as default};
