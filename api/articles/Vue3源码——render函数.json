{"title":"Vue3源码——render函数","uid":"322d11b057e8d3400060738444344655","slug":"Vue3源码——render函数","date":"2024-10-18T07:25:50.000Z","updated":"2024-10-18T07:33:00.222Z","comments":true,"path":"api/articles/Vue3源码——render函数.json","keywords":null,"cover":null,"content":"<p>在了解vue render函数之前, 需要先了解下Vue的整体流程</p>\n<p>应该可以理解一个Vue组件是如何运行起来的.</p>\n<ul>\n<li>模板通过编译生成AST树</li>\n<li>AST树生成Vue的render渲染函数</li>\n<li>render渲染函数结合数据生成vNode(Virtual DOM Node)树</li>\n<li>Diff和Patch后生新的UI界面(真实DOM渲染)</li>\n</ul>\n<p>我们需要了解以下几个概念:</p>\n<ul>\n<li>模板, Vue模板是纯HTML, 基于Vue的模板语法, 可以比较方便的处理数据和UI界面的关系</li>\n<li>AST, 即Abstract Syntax Tree的简称, Vue将HTML模板解析为AST,并对AST进行一些优化的标记处理, 提取最大的静态树,以使Virtual DOM直接跳过后面的Diff</li>\n<li>render渲染函数, render渲染函数是用来生成Virtual DOM的. Vue推荐使用模板来构建我们的应用程序, 在底层实现中Vue最终还是会将模板编译成渲染函数. 因此, 若我们想要得到更好的控制, 可以直接写渲染函数.(<strong>重点</strong>)</li>\n<li>Virtual DOM, 虚拟DOM</li>\n<li>Watcher, 每个Vue组件都有一个对应的<code>watcher</code>, 它会在组件<code>render</code>时收集组件所依赖的数据, 并在依赖有更新时, 触发组件重新渲染, Vue会自动优化并更新需要更新DOM</li>\n</ul>\n<h4 id=\"vue单文件的实现\"><a href=\"#vue单文件的实现\" class=\"headerlink\" title=\".vue单文件的实现\"></a>.vue单文件的实现</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;level === 1&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">slot</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">slot</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h2</span> <span class=\"attr\">v-else-if</span>=<span class=\"string\">&quot;level === 2&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">slot</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">slot</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h3</span> <span class=\"attr\">v-else-if</span>=<span class=\"string\">&quot;level === 3&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">slot</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">slot</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h4</span> <span class=\"attr\">v-else-if</span>=<span class=\"string\">&quot;level === 4&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">slot</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">slot</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">h4</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h5</span> <span class=\"attr\">v-else-if</span>=<span class=\"string\">&quot;level === 5&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">slot</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">slot</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">h5</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h6</span> <span class=\"attr\">v-else-if</span>=<span class=\"string\">&quot;level === 6&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">slot</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">slot</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">h6</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"attr\">name</span>: <span class=\"string\">&#x27;anchored-heading&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"attr\">props</span>: &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">level</span>: &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"attr\">type</span>: <span class=\"title class_\">Number</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"attr\">required</span>: <span class=\"literal\">true</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"render函数的实现\"><a href=\"#render函数的实现\" class=\"headerlink\" title=\"render函数的实现\"></a>render函数的实现</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Vue.component(&#x27;anchored-heading&#x27;, &#123;</span><br><span class=\"line\">    render: function (createElement) &#123;</span><br><span class=\"line\">        return createElement(</span><br><span class=\"line\">            &#x27;h&#x27; + this.level,   // tag name 标签名称</span><br><span class=\"line\">            this.$slots.default // 子组件中的阵列</span><br><span class=\"line\">        )</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    props: &#123;</span><br><span class=\"line\">        level: &#123;</span><br><span class=\"line\">            type: Number,</span><br><span class=\"line\">            required: true</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"createElement解析过程\"><a href=\"#createElement解析过程\" class=\"headerlink\" title=\"createElement解析过程\"></a>createElement解析过程</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"variable constant_\">SIMPLE_NORMALIZE</span> = <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"variable constant_\">ALWAYS_NORMALIZE</span> = <span class=\"number\">2</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">createElement</span> (context, tag, data, children, normalizationType, alwaysNormalize) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 兼容不传data的情况</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"title class_\">Array</span>.<span class=\"title function_\">isArray</span>(data) || <span class=\"title function_\">isPrimitive</span>(data)) &#123;</span><br><span class=\"line\">        normalizationType = children</span><br><span class=\"line\">        children = data</span><br><span class=\"line\">        data = <span class=\"literal\">undefined</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 如果alwaysNormalize是true</span></span><br><span class=\"line\">    <span class=\"comment\">// 那么normalizationType应该设置为常量ALWAYS_NORMALIZE的值</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (alwaysNormalize) normalizationType = <span class=\"variable constant_\">ALWAYS_NORMALIZE</span></span><br><span class=\"line\">        <span class=\"comment\">// 调用_createElement创建虚拟节点</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"title function_\">_createElement</span>(context, tag, data, children, normalizationType)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">_createElement</span> (context, tag, data, children, normalizationType) &#123;</span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">        * 如果存在data.__ob__，说明data是被Observer观察的数据</span></span><br><span class=\"line\"><span class=\"comment\">        * 不能用作虚拟节点的data</span></span><br><span class=\"line\"><span class=\"comment\">        * 需要抛出警告，并返回一个空节点</span></span><br><span class=\"line\"><span class=\"comment\">        * </span></span><br><span class=\"line\"><span class=\"comment\">        * 被监控的data不能被用作vnode渲染的数据的原因是：</span></span><br><span class=\"line\"><span class=\"comment\">        * data在vnode渲染过程中可能会被改变，这样会触发监控，导致不符合预期的操作</span></span><br><span class=\"line\"><span class=\"comment\">        */</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (data &amp;&amp; data.<span class=\"property\">__ob__</span>) &#123;</span><br><span class=\"line\">            process.<span class=\"property\">env</span>.<span class=\"property\">NODE_ENV</span> !== <span class=\"string\">&#x27;production&#x27;</span> &amp;&amp; <span class=\"title function_\">warn</span>(</span><br><span class=\"line\">            <span class=\"string\">`Avoid using observed data object as vnode data: <span class=\"subst\">$&#123;<span class=\"built_in\">JSON</span>.stringify(data)&#125;</span>\\n`</span> +</span><br><span class=\"line\">            <span class=\"string\">&#x27;Always create fresh vnode data objects in each render!&#x27;</span>,</span><br><span class=\"line\">            context</span><br><span class=\"line\">            )</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"title function_\">createEmptyVNode</span>()</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 当组件的is属性被设置为一个falsy的值</span></span><br><span class=\"line\">        <span class=\"comment\">// Vue将不会知道要把这个组件渲染成什么</span></span><br><span class=\"line\">        <span class=\"comment\">// 所以渲染一个空节点</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!tag) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"title function_\">createEmptyVNode</span>()</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 作用域插槽</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"title class_\">Array</span>.<span class=\"title function_\">isArray</span>(children) &amp;&amp; <span class=\"keyword\">typeof</span> children[<span class=\"number\">0</span>] === <span class=\"string\">&#x27;function&#x27;</span>) &#123;</span><br><span class=\"line\">            data = data || &#123;&#125;</span><br><span class=\"line\">            data.<span class=\"property\">scopedSlots</span> = &#123; <span class=\"attr\">default</span>: children[<span class=\"number\">0</span>] &#125;</span><br><span class=\"line\">            children.<span class=\"property\">length</span> = <span class=\"number\">0</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 根据normalizationType的值，选择不同的处理方法</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (normalizationType === <span class=\"variable constant_\">ALWAYS_NORMALIZE</span>) &#123;</span><br><span class=\"line\">            children = <span class=\"title function_\">normalizeChildren</span>(children)</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (normalizationType === <span class=\"variable constant_\">SIMPLE_NORMALIZE</span>) &#123;</span><br><span class=\"line\">            children = <span class=\"title function_\">simpleNormalizeChildren</span>(children)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> vnode, ns</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 如果标签名是字符串类型</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> tag === <span class=\"string\">&#x27;string&#x27;</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> <span class=\"title class_\">Ctor</span></span><br><span class=\"line\">            <span class=\"comment\">// 获取标签名的命名空间</span></span><br><span class=\"line\">            ns = config.<span class=\"title function_\">getTagNamespace</span>(tag)</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 判断是否为保留标签</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (config.<span class=\"title function_\">isReservedTag</span>(tag)) &#123;</span><br><span class=\"line\">                <span class=\"comment\">// 如果是保留标签,就创建一个这样的vnode</span></span><br><span class=\"line\">                vnode = <span class=\"keyword\">new</span> <span class=\"title class_\">VNode</span>(</span><br><span class=\"line\">                    config.<span class=\"title function_\">parsePlatformTagName</span>(tag), data, children,</span><br><span class=\"line\">                    <span class=\"literal\">undefined</span>, <span class=\"literal\">undefined</span>, context</span><br><span class=\"line\">                )</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"comment\">// 如果不是保留标签，那么我们将尝试从vm的components上查找是否有这个标签的定义</span></span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> ((<span class=\"title class_\">Ctor</span> = <span class=\"title function_\">resolveAsset</span>(context.<span class=\"property\">$options</span>, <span class=\"string\">&#x27;components&#x27;</span>, tag))) &#123;</span><br><span class=\"line\">                <span class=\"comment\">// 如果找到了这个标签的定义，就以此创建虚拟组件节点</span></span><br><span class=\"line\">                vnode = <span class=\"title function_\">createComponent</span>(<span class=\"title class_\">Ctor</span>, data, context, children, tag)</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"comment\">// 兜底方案，正常创建一个vnode</span></span><br><span class=\"line\">                vnode = <span class=\"keyword\">new</span> <span class=\"title class_\">VNode</span>(</span><br><span class=\"line\">                    tag, data, children,</span><br><span class=\"line\">                    <span class=\"literal\">undefined</span>, <span class=\"literal\">undefined</span>, context</span><br><span class=\"line\">                )</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 当tag不是字符串的时候，我们认为tag是组件的构造类</span></span><br><span class=\"line\">        <span class=\"comment\">// 所以直接创建</span></span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            vnode = <span class=\"title function_\">createComponent</span>(tag, data, context, children)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 如果有vnode</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (vnode) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 如果有namespace，就应用下namespace，然后返回vnode</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (ns) <span class=\"title function_\">applyNS</span>(vnode, ns)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> vnode</span><br><span class=\"line\">        <span class=\"comment\">// 否则，返回一个空节点</span></span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"title function_\">createEmptyVNode</span>()</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n","feature":true,"text":"在了解vue render函数之前, 需要先了解下Vue的整体流程 应该可以理解一个Vue组件是如何运行起来的. 模板通过编译生成AST树 AST树生成Vue的...","permalink":"/post/Vue3源码——render函数","photos":[],"count_time":{"symbolsCount":"5.4k","symbolsTime":"5 mins."},"categories":[{"name":"Vue3","slug":"Vue3","count":6,"path":"api/categories/Vue3.json"}],"tags":[{"name":"Vue3","slug":"Vue3","count":6,"path":"api/tags/Vue3.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#vue%E5%8D%95%E6%96%87%E4%BB%B6%E7%9A%84%E5%AE%9E%E7%8E%B0\"><span class=\"toc-text\">.vue单文件的实现</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#render%E5%87%BD%E6%95%B0%E7%9A%84%E5%AE%9E%E7%8E%B0\"><span class=\"toc-text\">render函数的实现</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#createElement%E8%A7%A3%E6%9E%90%E8%BF%87%E7%A8%8B\"><span class=\"toc-text\">createElement解析过程</span></a>","author":{"name":"权栈","slug":"blog-author","avatar":"https://p6-passport.byteacctimg.com/img/user-avatar/40c734cabc45915e93f17b88134aa761~140x140.awebp","link":"/","description":"成就伟大的唯一途径就是热爱你所做的事情","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"在 Vue 中实现20MB图片上传压缩到10KB","uid":"4a2d58310807e71f37ee94ffca6e1c5d","slug":"在 Vue 中实现文件上传并限制文件大小为 10KB","date":"2024-11-01T06:02:00.000Z","updated":"2024-11-01T06:19:06.104Z","comments":true,"path":"api/articles/在 Vue 中实现文件上传并限制文件大小为 10KB.json","keywords":null,"cover":null,"text":"在现代 Web 应用中，文件上传是一个常见的功能，尤其是在用户需要上传图片时。然而，上传的文件往往会占用较大的存储空间，影响性能和用户体验。因此，限制文件大小是...","permalink":"/post/在 Vue 中实现文件上传并限制文件大小为 10KB","photos":[],"count_time":{"symbolsCount":"3.3k","symbolsTime":"3 mins."},"categories":[{"name":"Vue","slug":"Vue","count":1,"path":"api/categories/Vue.json"}],"tags":[{"name":"Vue","slug":"Vue","count":1,"path":"api/tags/Vue.json"}],"author":{"name":"权栈","slug":"blog-author","avatar":"https://p6-passport.byteacctimg.com/img/user-avatar/40c734cabc45915e93f17b88134aa761~140x140.awebp","link":"/","description":"成就伟大的唯一途径就是热爱你所做的事情","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"Vue3源码——h函数","uid":"c86a81eebdde1918fe7712218383ec84","slug":"Vue3源码——h函数","date":"2024-10-12T06:57:10.000Z","updated":"2024-10-12T07:04:43.244Z","comments":true,"path":"api/articles/Vue3源码——h函数.json","keywords":null,"cover":null,"text":"Vue和React这类框架比起远古时期的jQuery，最大的改变就是采用了MVVM架构。 而MVVM架构的核心，则是虚拟DOM。 基本概念虚拟DOM说到虚拟DO...","permalink":"/post/Vue3源码——h函数","photos":[],"count_time":{"symbolsCount":"9.5k","symbolsTime":"9 mins."},"categories":[{"name":"Vue3","slug":"Vue3","count":6,"path":"api/categories/Vue3.json"}],"tags":[{"name":"Vue3","slug":"Vue3","count":6,"path":"api/tags/Vue3.json"}],"author":{"name":"权栈","slug":"blog-author","avatar":"https://p6-passport.byteacctimg.com/img/user-avatar/40c734cabc45915e93f17b88134aa761~140x140.awebp","link":"/","description":"成就伟大的唯一途径就是热爱你所做的事情","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}