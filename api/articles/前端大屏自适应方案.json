{"title":"前端大屏自适应方案","uid":"d5edacab67506b18e45fcb0990be9618","slug":"前端大屏自适应方案","date":"2024-09-12T02:58:20.000Z","updated":"2024-09-20T07:24:47.431Z","comments":true,"path":"api/articles/前端大屏自适应方案.json","keywords":null,"cover":null,"content":"<h2 id=\"易用-🚀\"><a href=\"#易用-🚀\" class=\"headerlink\" title=\"易用 🚀\"></a>易用 🚀</h2><p>调用仅需一行代码，即可适配设置分辨率以下的所有屏幕，无需任何其他辅助</p>\n<h2 id=\"性能-⚡\"><a href=\"#性能-⚡\" class=\"headerlink\" title=\"性能 ⚡\"></a>性能 ⚡</h2><p>只影响一个元素样式，计算量极小</p>\n<h2 id=\"灵活-💥\"><a href=\"#灵活-💥\" class=\"headerlink\" title=\"灵活 💥\"></a>灵活 💥</h2><p>可以给项目全局自适应，也可以单独页面做自适应</p>\n<h2 id=\"原理\"><a href=\"#原理\" class=\"headerlink\" title=\"原理\"></a>原理</h2><p>即在 scale 等比缩放的基础上，获取屏幕的宽度除以设计稿的宽度，获取到宽度比例值；获取屏幕的高度除以设计稿的高度，获取到高度比例值；使用 transform: scale(x, x) 动态监听来实现页面的缩放比例，从而还原 UI 图效果。这可以支持设计稿以下的各种分辨率。</p>\n<h2 id=\"使用代码\"><a href=\"#使用代码\" class=\"headerlink\" title=\"使用代码\"></a>使用代码</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">* 根据视口尺寸调整给定元素的缩放比例。</span><br><span class=\"line\"> * @param &#123;<span class=\"title class_\">HTMLElement</span>&#125; e - 要调整的元素。</span><br><span class=\"line\"> * @param &#123;number&#125; planWidth - 元素的计划宽度,默认1980px。</span><br><span class=\"line\"> * @param &#123;number&#125; planHeight - 元素的计划高度,默认1080px。</span><br><span class=\"line\"> */</span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">selfAdaption</span>(<span class=\"params\">e, planWidth = <span class=\"number\">1980</span>, planHeight = <span class=\"number\">1080</span></span>) &#123;</span><br><span class=\"line\">      <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">       * 获取客户端视口的当前尺寸，并根据最小计划尺寸进行调整。</span></span><br><span class=\"line\"><span class=\"comment\">       * <span class=\"doctag\">@returns</span> &#123;<span class=\"type\">&#123;width: number, height: number</span>&#125;&#125; 客户端视口的调整后宽度和高度。</span></span><br><span class=\"line\"><span class=\"comment\">       */</span></span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(planWidth, planHeight);</span><br><span class=\"line\">      <span class=\"keyword\">const</span> <span class=\"title function_\">getClientDimensions</span> = (<span class=\"params\"></span>) =&gt; &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 获取客户端视口的当前宽度和高度</span></span><br><span class=\"line\">        <span class=\"keyword\">let</span> width = <span class=\"variable language_\">document</span>.<span class=\"property\">body</span>.<span class=\"property\">clientWidth</span> || <span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>.<span class=\"property\">clientWidth</span>;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> height = <span class=\"variable language_\">document</span>.<span class=\"property\">body</span>.<span class=\"property\">clientHeight</span> || <span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>.<span class=\"property\">clientHeight</span>;</span><br><span class=\"line\">        <span class=\"comment\">// 如果计划高度小于1080，则进行高度调整</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (planHeight &lt; <span class=\"number\">1080</span>) &#123;</span><br><span class=\"line\">          height -= (<span class=\"number\">1080</span> - planHeight);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">// 如果计划宽度小于1920，则进行宽度调整</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (planWidth &lt; <span class=\"number\">1920</span>) &#123;</span><br><span class=\"line\">          width -= (<span class=\"number\">1920</span> - planWidth);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> &#123; width, height &#125;;</span><br><span class=\"line\">      &#125;;</span><br><span class=\"line\">      <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">       * 根据当前视口尺寸更新元素的缩放比例。</span></span><br><span class=\"line\"><span class=\"comment\">       */</span></span><br><span class=\"line\">      <span class=\"keyword\">const</span> <span class=\"title function_\">updateScale</span> = (<span class=\"params\"></span>) =&gt; &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 获取调整后的客户端尺寸</span></span><br><span class=\"line\">        <span class=\"keyword\">const</span> &#123; width, height &#125; = <span class=\"title function_\">getClientDimensions</span>();</span><br><span class=\"line\">        <span class=\"comment\">// 计算宽度和高度的缩放比例</span></span><br><span class=\"line\">        <span class=\"keyword\">const</span> ratioWidth = width / planWidth;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> ratioHeight = height / planHeight;</span><br><span class=\"line\">        <span class=\"comment\">// 对元素应用缩放变换</span></span><br><span class=\"line\">        e.<span class=\"property\">style</span>.<span class=\"property\">transform</span> = <span class=\"string\">`scale(<span class=\"subst\">$&#123;ratioWidth&#125;</span>, <span class=\"subst\">$&#123;ratioHeight&#125;</span>)`</span>;</span><br><span class=\"line\">      &#125;;</span><br><span class=\"line\">      <span class=\"comment\">// 设置元素的初始样式</span></span><br><span class=\"line\">      e.<span class=\"property\">style</span>.<span class=\"property\">cssText</span> += <span class=\"string\">`</span></span><br><span class=\"line\"><span class=\"string\">    transform-origin: 0 0 0;</span></span><br><span class=\"line\"><span class=\"string\">    display: flex;</span></span><br><span class=\"line\"><span class=\"string\">    min-width: auto;</span></span><br><span class=\"line\"><span class=\"string\">    min-height: auto;</span></span><br><span class=\"line\"><span class=\"string\">    overflow: hidden;</span></span><br><span class=\"line\"><span class=\"string\">    width: <span class=\"subst\">$&#123;planWidth&#125;</span>px;</span></span><br><span class=\"line\"><span class=\"string\">    height: <span class=\"subst\">$&#123;planHeight&#125;</span>px;</span></span><br><span class=\"line\"><span class=\"string\">  `</span>;</span><br><span class=\"line\">      <span class=\"comment\">// 初始更新缩放比例</span></span><br><span class=\"line\">      <span class=\"title function_\">updateScale</span>();</span><br><span class=\"line\">      <span class=\"comment\">// 添加事件监听器，在窗口调整大小时更新缩放比例</span></span><br><span class=\"line\">      <span class=\"variable language_\">window</span>.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;resize&#x27;</span>, updateScale);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">selfAdaption（e）传递的要自适应最外层dom</span><br></pre></td></tr></table></figure>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>使用 transform: scale 自适应后，地图上点击事件失效，解决办法：</p></blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">resetMapSize</span>(<span class=\"params\"></span>) &#123; </span><br><span class=\"line\">       <span class=\"keyword\">let</span> mapContent = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&quot;map&quot;</span>); </span><br><span class=\"line\">       mapContent.<span class=\"property\">style</span>.<span class=\"property\">transform</span> = <span class=\"string\">`scale(<span class=\"subst\">$&#123;<span class=\"number\">1</span> / ratioWidth&#125;</span>,<span class=\"subst\">$&#123;<span class=\"number\">1</span> / ratioHeight&#125;</span>)`</span> </span><br><span class=\"line\">     &#125; </span><br><span class=\"line\"> <span class=\"comment\">// 用完后记得销毁监听事件 比如 vue 中 </span></span><br><span class=\"line\"> destroyed () &#123; </span><br><span class=\"line\">     <span class=\"variable language_\">window</span>.<span class=\"title function_\">removeEventListener</span>(<span class=\"string\">&#x27;resize&#x27;</span>,<span class=\"variable language_\">this</span>.<span class=\"property\">resetMapSize</span>) </span><br><span class=\"line\">   &#125; </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n","feature":true,"text":"易用 🚀调用仅需一行代码，即可适配设置分辨率以下的所有屏幕，无需任何其他辅助 性能 ⚡只影响一个元素样式，计算量极小 灵活 💥可以给项目全局自适应，也可以单独页...","permalink":"/post/前端大屏自适应方案","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[{"name":"JS","slug":"JS","count":1,"path":"api/categories/JS.json"}],"tags":[{"name":"JS","slug":"JS","count":1,"path":"api/tags/JS.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%98%93%E7%94%A8-%F0%9F%9A%80\"><span class=\"toc-text\">易用 🚀</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%80%A7%E8%83%BD-%E2%9A%A1\"><span class=\"toc-text\">性能 ⚡</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%81%B5%E6%B4%BB-%F0%9F%92%A5\"><span class=\"toc-text\">灵活 💥</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8E%9F%E7%90%86\"><span class=\"toc-text\">原理</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8%E4%BB%A3%E7%A0%81\"><span class=\"toc-text\">使用代码</span></a></li></ol>","author":{"name":"权栈","slug":"blog-author","avatar":"https://p6-passport.byteacctimg.com/img/user-avatar/40c734cabc45915e93f17b88134aa761~140x140.awebp","link":"/","description":"成就伟大的唯一途径就是热爱你所做的事情","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"前端优化首次加载速度","uid":"56ce95bec0e493691d1f055dfbf1898e","slug":"前端优化首次加载速度","date":"2024-09-20T07:08:20.000Z","updated":"2024-09-20T07:23:32.511Z","comments":true,"path":"api/articles/前端优化首次加载速度.json","keywords":null,"cover":[],"text":"compression-webpack-plugincompression-webpack-plugin 是一个 Webpack 插件，用于压缩生成的静态文件，...","permalink":"/post/前端优化首次加载速度","photos":[],"count_time":{"symbolsCount":"6.9k","symbolsTime":"6 mins."},"categories":[{"name":"Vue2","slug":"Vue2","count":1,"path":"api/categories/Vue2.json"}],"tags":[{"name":"Vue2","slug":"Vue2","count":1,"path":"api/tags/Vue2.json"}],"author":{"name":"权栈","slug":"blog-author","avatar":"https://p6-passport.byteacctimg.com/img/user-avatar/40c734cabc45915e93f17b88134aa761~140x140.awebp","link":"/","description":"成就伟大的唯一途径就是热爱你所做的事情","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"Vue3.5 源码解析， useTemplateRef 实现原理","uid":"32c8c23c6d89385feba3d0e7e602221c","slug":"Vue3.5 源码解析， useTemplateRef 实现原理","date":"2024-09-06T06:07:04.000Z","updated":"2024-09-20T07:23:59.401Z","comments":true,"path":"api/articles/Vue3.5 源码解析， useTemplateRef 实现原理.json","keywords":null,"cover":null,"text":"useTemplateRef 的作用useTemplateRef 是用来专门获取 dom 或者 组件示例 的。 在之前，如果我们想要获取 dom ，那么需要这么...","permalink":"/post/Vue3.5 源码解析， useTemplateRef 实现原理","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"Vue3","slug":"Vue3","count":4,"path":"api/categories/Vue3.json"}],"tags":[{"name":"Vue3","slug":"Vue3","count":4,"path":"api/tags/Vue3.json"}],"author":{"name":"权栈","slug":"blog-author","avatar":"https://p6-passport.byteacctimg.com/img/user-avatar/40c734cabc45915e93f17b88134aa761~140x140.awebp","link":"/","description":"成就伟大的唯一途径就是热爱你所做的事情","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}