{"title":"在 Vue 中实现20MB图片上传压缩到10KB","uid":"4a2d58310807e71f37ee94ffca6e1c5d","slug":"在 Vue 中实现文件上传并限制文件大小为 10KB","date":"2024-11-01T06:02:00.000Z","updated":"2024-11-01T06:19:06.104Z","comments":true,"path":"api/articles/在 Vue 中实现文件上传并限制文件大小为 10KB.json","keywords":null,"cover":null,"content":"<p>在现代 Web 应用中，文件上传是一个常见的功能，尤其是在用户需要上传图片时。然而，上传的文件往往会占用较大的存储空间，影响性能和用户体验。因此，限制文件大小是一个重要的需求。在这篇文章中，我们将介绍如何在 Vue.js 应用中实现文件上传，并将上传压缩到 10KB</p>\n<h4 id=\"创建文件上传组件\"><a href=\"#创建文件上传组件\" class=\"headerlink\" title=\"创建文件上传组件\"></a>创建文件上传组件</h4><p>我们首先需要创建一个简单的文件上传组件，用户可以通过这个组件选择图片文件。以下是基本的组件结构：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;file&quot;</span> @<span class=\"attr\">change</span>=<span class=\"string\">&quot;handleFileUpload&quot;</span> <span class=\"attr\">accept</span>=<span class=\"string\">&quot;image/*&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;imageSrc&quot;</span> <span class=\"attr\">:src</span>=<span class=\"string\">&quot;imageSrc&quot;</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;Preview&quot;</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>这个模板包含一个文件输入框和一个用于显示图片预览的 img 标签。</p>\n<h4 id=\"处理文件上传\"><a href=\"#处理文件上传\" class=\"headerlink\" title=\"处理文件上传\"></a>处理文件上传</h4><p>接下来，我们需要在组件中定义文件上传的逻辑。我们将使用 FileReader API 来读取文件，并通过 canvas 进行图片的压缩处理。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  <span class=\"title function_\">data</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">      <span class=\"attr\">imageSrc</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">methods</span>: &#123;</span><br><span class=\"line\">    <span class=\"keyword\">async</span> <span class=\"title function_\">handleFileUpload</span>(<span class=\"params\">event</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> file = event.<span class=\"property\">target</span>.<span class=\"property\">files</span>[<span class=\"number\">0</span>];</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (file) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> compressedFile = <span class=\"keyword\">await</span> <span class=\"variable language_\">this</span>.<span class=\"title function_\">compressImage</span>(file);</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(compressedFile);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br></pre></td></tr></table></figure>\n\n<p>handleFileUpload 方法会在用户选择文件后被调用。我们首先检查用户是否选择了文件，如果选择了，则调用 compressImage 方法进行压缩处理。</p>\n<h4 id=\"压缩图片\"><a href=\"#压缩图片\" class=\"headerlink\" title=\"压缩图片\"></a>压缩图片</h4><p>压缩图片的核心逻辑在于 compressImage 方法。该方法会创建一个新的 canvas 元素，并根据最大宽高对图片进行缩放，然后将其压缩到 10KB 以内。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">      <span class=\"title function_\">compressImage</span>(<span class=\"params\">file</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> reader = <span class=\"keyword\">new</span> <span class=\"title class_\">FileReader</span>();</span><br><span class=\"line\">        reader.<span class=\"property\">onload</span> = <span class=\"function\">(<span class=\"params\">e</span>) =&gt;</span> &#123;</span><br><span class=\"line\">          <span class=\"keyword\">const</span> img = <span class=\"keyword\">new</span> <span class=\"title class_\">Image</span>();</span><br><span class=\"line\">          img.<span class=\"property\">src</span> = e.<span class=\"property\">target</span>.<span class=\"property\">result</span>;</span><br><span class=\"line\">          img.<span class=\"property\">onload</span> = <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">const</span> canvas = <span class=\"variable language_\">document</span>.<span class=\"title function_\">createElement</span>(<span class=\"string\">&#x27;canvas&#x27;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">const</span> ctx = canvas.<span class=\"title function_\">getContext</span>(<span class=\"string\">&#x27;2d&#x27;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">const</span> <span class=\"variable constant_\">MAX_WIDTH</span> = <span class=\"number\">100</span>; <span class=\"comment\">// 最大宽度</span></span><br><span class=\"line\">            <span class=\"keyword\">const</span> <span class=\"variable constant_\">MAX_HEIGHT</span> = <span class=\"number\">100</span>; <span class=\"comment\">// 最大高度</span></span><br><span class=\"line\">            <span class=\"keyword\">let</span> width = img.<span class=\"property\">width</span>;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> height = img.<span class=\"property\">height</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 计算新的宽高</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (width &gt; height) &#123;</span><br><span class=\"line\">              <span class=\"keyword\">if</span> (width &gt; <span class=\"variable constant_\">MAX_WIDTH</span>) &#123;</span><br><span class=\"line\">                height *= <span class=\"variable constant_\">MAX_WIDTH</span> / width;</span><br><span class=\"line\">                width = <span class=\"variable constant_\">MAX_WIDTH</span>;</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">              <span class=\"keyword\">if</span> (height &gt; <span class=\"variable constant_\">MAX_HEIGHT</span>) &#123;</span><br><span class=\"line\">                width *= <span class=\"variable constant_\">MAX_HEIGHT</span> / height;</span><br><span class=\"line\">                height = <span class=\"variable constant_\">MAX_HEIGHT</span>;</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            canvas.<span class=\"property\">width</span> = width;</span><br><span class=\"line\">            canvas.<span class=\"property\">height</span> = height;</span><br><span class=\"line\">            ctx.<span class=\"title function_\">drawImage</span>(img, <span class=\"number\">0</span>, <span class=\"number\">0</span>, width, height);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 压缩为 10KB</span></span><br><span class=\"line\">            canvas.<span class=\"title function_\">toBlob</span>(<span class=\"function\">(<span class=\"params\">blob</span>) =&gt;</span> &#123;</span><br><span class=\"line\">              <span class=\"keyword\">if</span> (blob.<span class=\"property\">size</span> &gt; <span class=\"number\">10</span> * <span class=\"number\">1024</span>) &#123; <span class=\"comment\">// 10KB</span></span><br><span class=\"line\">                <span class=\"title function_\">reject</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">Error</span>(<span class=\"string\">&#x27;Compressed file exceeds 10KB.&#x27;</span>));</span><br><span class=\"line\">              &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"title function_\">resolve</span>(blob);</span><br><span class=\"line\">                <span class=\"variable language_\">this</span>.<span class=\"property\">imageSrc</span> = <span class=\"variable constant_\">URL</span>.<span class=\"title function_\">createObjectURL</span>(blob); <span class=\"comment\">// 显示预览</span></span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">            &#125;, <span class=\"string\">&#x27;image/jpeg&#x27;</span>, <span class=\"number\">0.7</span>); <span class=\"comment\">// 设定压缩质量</span></span><br><span class=\"line\">          &#125;;</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">        reader.<span class=\"title function_\">readAsDataURL</span>(file);</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>在这个方法中，我们首先读取文件并创建一个图像对象。在图像加载完成后，我们创建一个 canvas，设置其大小，并将图像绘制到画布上。接下来，我们使用 canvas.toBlob 方法将画布内容转换为 Blob 对象，并检查其大小是否小于 10KB。如果压缩成功，我们将 Blob 对象转换为 URL 以供预览。</p>\n<h4 id=\"预览与用户反馈\"><a href=\"#预览与用户反馈\" class=\"headerlink\" title=\"预览与用户反馈\"></a>预览与用户反馈</h4><p>在处理完文件上传和压缩后，我们可以通过绑定 imageSrc 来显示上传后的图片预览。这样用户就可以实时查看他们上传的文件。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;imageSrc&quot;</span> <span class=\"attr\">:src</span>=<span class=\"string\">&quot;imageSrc&quot;</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;Preview&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h4><p>通过以上步骤，我们成功创建了一个简单的文件上传组件，能够有效地限制上传文件的大小为 10KB。这种处理方式不仅能保证上传的文件符合大小要求，同时也能在一定程度上保证上传的速度和用户体验。</p>\n<p>如果你需要支持其他类型的文件或者扩展更多功能，可以根据实际需求对代码进行相应的修改。这种方法也可以作为其他文件处理功能的基础，帮助你在 Vue 应用中实现更复杂的文件上传逻辑。</p>\n","feature":true,"text":"在现代 Web 应用中，文件上传是一个常见的功能，尤其是在用户需要上传图片时。然而，上传的文件往往会占用较大的存储空间，影响性能和用户体验。因此，限制文件大小是...","permalink":"/post/在 Vue 中实现文件上传并限制文件大小为 10KB","photos":[],"count_time":{"symbolsCount":"3.3k","symbolsTime":"3 mins."},"categories":[{"name":"Vue","slug":"Vue","count":2,"path":"api/categories/Vue.json"}],"tags":[{"name":"Vue","slug":"Vue","count":2,"path":"api/tags/Vue.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%88%9B%E5%BB%BA%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%BB%84%E4%BB%B6\"><span class=\"toc-text\">创建文件上传组件</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%A4%84%E7%90%86%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0\"><span class=\"toc-text\">处理文件上传</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%8E%8B%E7%BC%A9%E5%9B%BE%E7%89%87\"><span class=\"toc-text\">压缩图片</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E9%A2%84%E8%A7%88%E4%B8%8E%E7%94%A8%E6%88%B7%E5%8F%8D%E9%A6%88\"><span class=\"toc-text\">预览与用户反馈</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">总结</span></a></li></ol>","author":{"name":"权栈","slug":"blog-author","avatar":"https://p6-passport.byteacctimg.com/img/user-avatar/40c734cabc45915e93f17b88134aa761~140x140.awebp","link":"/","description":"成就伟大的唯一途径就是热爱你所做的事情","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"前端通信 CustomEvent","uid":"b78b732595416811105ff8bbead66711","slug":"前端通信 CustomEvent","date":"2024-11-08T06:39:50.000Z","updated":"2024-11-08T06:47:37.203Z","comments":true,"path":"api/articles/前端通信 CustomEvent.json","keywords":null,"cover":null,"text":"通过简单的几行代码，我们能够轻松创建和触发自定义事件，从而降低特殊场景下的开发风险，并且提升我们的开发效率。而且它可以非常容易的写到 React 和 Vue 项...","permalink":"/post/前端通信 CustomEvent","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"Vue","slug":"Vue","count":2,"path":"api/categories/Vue.json"}],"tags":[{"name":"Vue","slug":"Vue","count":2,"path":"api/tags/Vue.json"}],"author":{"name":"权栈","slug":"blog-author","avatar":"https://p6-passport.byteacctimg.com/img/user-avatar/40c734cabc45915e93f17b88134aa761~140x140.awebp","link":"/","description":"成就伟大的唯一途径就是热爱你所做的事情","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"Vue3源码——render函数","uid":"322d11b057e8d3400060738444344655","slug":"Vue3源码——render函数","date":"2024-10-18T07:25:50.000Z","updated":"2024-10-18T07:33:00.222Z","comments":true,"path":"api/articles/Vue3源码——render函数.json","keywords":null,"cover":null,"text":"在了解vue render函数之前, 需要先了解下Vue的整体流程 应该可以理解一个Vue组件是如何运行起来的. 模板通过编译生成AST树 AST树生成Vue的...","permalink":"/post/Vue3源码——render函数","photos":[],"count_time":{"symbolsCount":"5.4k","symbolsTime":"5 mins."},"categories":[{"name":"Vue3","slug":"Vue3","count":6,"path":"api/categories/Vue3.json"}],"tags":[{"name":"Vue3","slug":"Vue3","count":6,"path":"api/tags/Vue3.json"}],"author":{"name":"权栈","slug":"blog-author","avatar":"https://p6-passport.byteacctimg.com/img/user-avatar/40c734cabc45915e93f17b88134aa761~140x140.awebp","link":"/","description":"成就伟大的唯一途径就是热爱你所做的事情","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}